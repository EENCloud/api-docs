{
    "apiVersion": "1.0.0",
    "swaggerVersion": "1.2",
    "basePath": "https://apidocs.eagleeyenetworks.com",
    "resourcePath": "pngspan",
    "produces": ["application/json"],
    "apis": [
        {
            "path": "/pngspan/{png_type}.png",
            "operations": [
                {
                    "method": "GET",
                    "summary": "GET pngspan",
                    "notes": "PNG images can be retrieved for supporting metric visualization.",
                    "nickname": "getPngspan",
                    "type": "image",
                    "produces": ["image/png"],
                    "parameters": [
                        {
                            "name": "png_type",
                            "description": "PNG type",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "enum":[
                                "span",
                                "etag",
                                "event",
                                "setting",
                                "purge"
                            ]
                        },
                        {
                            "name": "st",
                            "description": "Start time of span.  +/- offsets from “now” are valid in ms. EEN timestamp format.",
                            "required": true,
                            "type": "string",
                            "paramType": "query"
                        },
                        {
                            "name": "et",
                            "description": "End time of span.  +/- offsets from “now” are valid in ms. EEN timestamp format.",
                            "required": true,
                            "type": "string",
                            "paramType": "query"
                        },
                        {
                            "name": "w",
                            "description": "Width in pixels of resulting PNG. Integer greater than 0.",
                            "required": true,
                            "type":"integer",
                            "format":"int64",
                            "paramType": "query"
                        },
                        {
                            "name": "c",
                            "description": "ID of camera being queried.",
                            "required": true,
                            "type":"string",
                            "paramType": "query"
                        },
                        {
                            "name": "fg",
                            "description": "Color of foreground (active).  If both fg and bg have 0 for alpha, assumed fully opaque (0xff). 32bit ARGB color.",
                            "required": true,
                            "type":"string",
                            "paramType": "query"
                        },
                        {
                            "name": "bg",
                            "description": "Color of background (inactive). 32bit ARGB color.",
                            "required": true,
                            "type":"string",
                            "paramType": "query"
                        },
                        {
                            "name": "table",
                            "description": "If provided, specifies name of table to be rendered.  Required for type 'span' and 'event'.",
                            "required": false,
                            "type":"string",
                            "paramType": "query"
                        },
                        {
                            "name": "etag",
                            "description": "Indentifies etag to be rendered, using the 4 character string identifier ('4CC').  Will utilize matching event tables where possible.  Ignored for type 'span' and 'event'.",
                            "required": false,
                            "type":"string",
                            "paramType": "query"
                        },
                        {
                            "name": "flval",
                            "description": "Identified value of the filter field from the starting etag. Only applicable for type 'span'.",
                            "required": false,
                            "type":"string",
                            "paramType": "query"
                        },
                        {
                            "name": "flname",
                            "description": "Name of field within span start etag to match to flval.  Interesting fields are roiid in roim table and videoid for video. Only applicable for type 'span'.",
                            "required": false,
                            "type":"string",
                            "paramType": "query"
                        },
                        {
                            "name": "flflags",
                            "description": "Limits span rendering to spans with the flag asserted.  ALERTS is asserted for roim and motion spans when an alert is active.",
                            "required": false,
                            "type":"string",
                            "paramType": "query"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "Request succeeded"
                        },
                        {
                            "code": 401,
                            "message": "Unauthorized due to invalid session"
                        },
                        {
                            "code": 404,
                            "message": "Not found if camera, etag or table cannot be found"
                        },
                        {
                            "code": 408,
                            "message": "Required arguments are missing or invalid"
                        },
                        {
                            "code": 500,
                            "message": "Problem occurred during data processing or rendering"
                        }
                    ]
                }
            ]
        }
    ]
}
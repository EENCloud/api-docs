{
    "apiVersion": "1.0.0",
    "swaggerVersion": "1.2",
    "basePath": "https://apidocs.eagleeyenetworks.com",
    "resourcePath": "asset",
    "produces": ["application/json"],
    "apis": [
        {
            "path": "/asset/asset/image.jpeg?c={device_id};t={timestamp};q={quality};a={asset_class}",
            "operations": [
                {
                    "method": "GET",
                    "summary": "GET Image",
                    "notes": "Get an image. Return binary image data in JPEG format. <br/>Headers: <br/>cache control headers to allow asset caching. <br/>content-type: image/jpeg. <br/>location: uri of image (same as request)",
                    "nickname": "getAssetImage",
                    "parameters": [
                        {
                            "name": "device_id",
                            "description": "Device ID",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        },
                        {
                            "name": "timestamp",
                            "description": "Timestamp in EEN format: YYYYMMDDHHMMSS.NNN",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        },
                        {
                            "name": "quality",
                            "description": "Quality of image",
                            "required": false,
                            "type": "string",
                            "paramType": "path",
                            "enum":[
                                "high",
                                "med",
                                "low"
                            ]
                        },
                        {
                            "name": "asset_class",
                            "description": "Asset class",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "enum":[
                                "all",
                                "pre",
                                "thumb"
                            ]
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "Request succeeded"
                        },
                        {
                            "code": 301,
                            "message": "Asset has been moved to a different archiver"
                        },
                        {
                            "code": 400,
                            "message": "Unexpected or non-identifiable arguments are supplied"
                        },
                        {
                            "code": 401,
                            "message": "Unauthorized due to invalid session cookie"
                        },
                        {
                            "code": 403,
                            "message": "Forbidden due to the user missing the necessary privileges"
                        },
                        {
                            "code": 404,
                            "message": "Image was not found"
                        }
                    ]
                }
            ]
        },
        {
            "path": "/asset/prev/image.jpeg?c={device_id};t={timestamp};q={quality};a={asset_class}",
            "operations": [
                {
                    "method": "GET",
                    "summary": "GET previous Image",
                    "notes": "Get the image before the specified timestamp if one exists. <br/>Returns binary image data in JPEG format. <br/> Headers: cache control headers to allow asset caching if no now relative:<br/> x-ee-timestamp: type-timestamp specifies asset type and timestamp of the provided image. Type is one of 'video', 'preview', 'thumb', 'event'. <br/>x-ee-prev: [type-timestamp | unknown ] of previous image matching the class filter OR 'unknown' if the previous image was complex to figure out. <br/>x-ee-next: [type-timestamp | unknown ] as with x-ee-prev, but specifying the following image. <br/>content-type: image/jpeg <br/>location: /asset/asset/image.jpeg?t=20120917213405.700;q=low;c=thumb (identifies actual asset time of image in response).",
                    "nickname": "getAssetPreviousImage",
                    "parameters": [
                        {
                            "name": "device_id",
                            "description": "Device ID",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        },
                        {
                            "name": "timestamp",
                            "description": "Timestamp in EEN format: YYYYMMDDHHMMSS.NNN",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        },
                        {
                            "name": "quality",
                            "description": "Quality of image",
                            "required": false,
                            "type": "string",
                            "paramType": "path",
                            "enum":[
                                "high",
                                "med",
                                "low"
                            ]
                        },
                        {
                            "name": "asset_class",
                            "description": "Asset class",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "enum":[
                                "all",
                                "pre",
                                "thumb"
                            ]
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "Request succeeded"
                        },
                        {
                            "code": 301,
                            "message": "Asset has been moved to a different archiver"
                        },
                        {
                            "code": 400,
                            "message": "Unexpected or non-identifiable arguments are supplied"
                        },
                        {
                            "code": 401,
                            "message": "Unauthorized due to invalid session cookie"
                        },
                        {
                            "code": 403,
                            "message": "Forbidden due to the user missing the necessary privileges"
                        },
                        {
                            "code": 404,
                            "message": "Image was not found"
                        }
                    ]
                }
            ]
        },
        {
            "path": "/asset/next/image.jpeg?c={device_id};t={timestamp};q={quality};a={asset_class};l={time_limit}",
            "operations": [
                {
                    "method": "GET",
                    "summary": "GET Next Image",
                    "notes": "Get the image after the specified timestamp if one exists.  Blocks if not such image currently exists, otherwise identical to Request After Image.<br/> Returns binary image data in JPEG format. <br/> Headers: cache control headers to allow asset caching if no now relative:<br/> x-ee-timestamp: type-timestamp specifies asset type and timestamp of the provided image. Type is one of 'video', 'preview', 'thumb', 'event'. <br/>x-ee-prev: [type-timestamp | unknown ] of previous image matching the class filter OR 'unknown' if the previous image was complex to figure out. <br/>x-ee-next: [type-timestamp | unknown ] as with x-ee-prev, but specifying the following image. <br/>content-type: image/jpeg <br/>location: /asset/asset/image.jpeg?t=20120917213405.700;q=low;c=thumb (identifies actual asset time of image in response).",
                    "nickname": "getAssetNextImage",
                    "parameters": [
                        {
                            "name": "device_id",
                            "description": "Device ID",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        },
                        {
                            "name": "timestamp",
                            "description": "Timestamp in EEN format: YYYYMMDDHHMMSS.NNN",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        },
                        {
                            "name": "quality",
                            "description": "Quality of image",
                            "required": false,
                            "type": "string",
                            "paramType": "path",
                            "enum":[
                                "high",
                                "med",
                                "low"
                            ]
                        },
                        {
                            "name": "asset_class",
                            "description": "Asset class",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "enum":[
                                "all",
                                "pre",
                                "thumb"
                            ]
                        },
                        {
                            "name":"time_limit",
                            "description":"Limit of time to wait before responding in decimal milliseconds",
                            "required": false,
                            "type": "integer",
                            "format": "int64",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "Request succeeded"
                        },
                        {
                            "code": 301,
                            "message": "Asset has been moved to a different archiver"
                        },
                        {
                            "code": 400,
                            "message": "Unexpected or non-identifiable arguments are supplied"
                        },
                        {
                            "code": 401,
                            "message": "Unauthorized due to invalid session cookie"
                        },
                        {
                            "code": 403,
                            "message": "Forbidden due to the user missing the necessary privileges"
                        },
                        {
                            "code": 404,
                            "message": "Image was not found"
                        },
                        {
                            "code": 408,
                            "message": "Time out limit occurred before asset arrived"
                        }
                    ]
                }
            ]
        },
        {
            "path": "/asset/after/image.jpeg?c={device_id};t={timestamp};q={quality};a={asset_class}",
            "operations": [
                {
                    "method": "GET",
                    "summary": "GET After Image",
                    "notes": "Get the image after the specified timestamp if one exists. Returns binary image data in JPEG format. <br/> Headers: cache control headers to allow asset caching if no now relative:<br/> x-ee-timestamp: type-timestamp specifies asset type and timestamp of the provided image. Type is one of 'video', 'preview', 'thumb', 'event'. <br/>x-ee-prev: [type-timestamp | unknown ] of previous image matching the class filter OR 'unknown' if the previous image was complex to figure out. <br/>x-ee-next: [type-timestamp | unknown ] as with x-ee-prev, but specifying the following image. <br/>content-type: image/jpeg <br/>location: /asset/asset/image.jpeg?t=20120917213405.700;q=low;c=thumb (identifies actual asset time of image in response).",
                    "nickname": "getAssetAfterImage",
                    "parameters": [
                        {
                            "name": "device_id",
                            "description": "Device ID",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        },
                        {
                            "name": "timestamp",
                            "description": "Timestamp in EEN format: YYYYMMDDHHMMSS.NNN",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        },
                        {
                            "name": "quality",
                            "description": "Quality of image",
                            "required": false,
                            "type": "string",
                            "paramType": "path",
                            "enum":[
                                "high",
                                "med",
                                "low"
                            ]
                        },
                        {
                            "name": "asset_class",
                            "description": "Asset class",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "enum":[
                                "all",
                                "pre",
                                "thumb"
                            ]
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "Request succeeded"
                        },
                        {
                            "code": 301,
                            "message": "Asset has been moved to a different archiver"
                        },
                        {
                            "code": 400,
                            "message": "Unexpected or non-identifiable arguments are supplied"
                        },
                        {
                            "code": 401,
                            "message": "Unauthorized due to invalid session cookie"
                        },
                        {
                            "code": 403,
                            "message": "Forbidden due to the user missing the necessary privileges"
                        },
                        {
                            "code": 404,
                            "message": "Image was not found"
                        }
                    ]
                }
            ]
        },
        {
            "path": "/asset/play/video.{format}?t={start_timestamp};e={end_timestamp};q={quality};c={device_id};T={playback_start_timestamp};to={to}",
            "operations": [
                {
                    "method": "GET",
                    "summary": "GET Video",
                    "notes": "Play video",
                    "nickname": "getPlayVideo",
                    "parameters": [
                        {
                            "name": "device_id",
                            "description": "Device ID",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        },
                        {
                            "name": "start_timestamp",
                            "description": "Start Timestamp in EEN format: YYYYMMDDHHMMSS.NNN",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        },
                        {
                            "name": "end_timestamp",
                            "description": "End Timestamp in EEN format: YYYYMMDDHHMMSS.NNN",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        },
                        {
                            "name": "format",
                            "description": "Video format",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "enum":[
                                "flv",
                                "mp4",
                                "ts",
                                "m3u"
                            ]
                        },
                        {
                            "name": "quality",
                            "description": "Indicates requested resolution if multiple are available",
                            "required": false,
                            "type": "string",
                            "paramType": "path",
                            "enum":[
                                "high",
                                "med",
                                "low"
                            ]
                        },
                        {
                            "name": "playback_start_timestamp",
                            "description": "EE timestamp of start of playback.  This is a replacement to the 'to' argument.",
                            "required": false,
                            "type": "string",
                            "paramType": "path"
                        },
                        {
                            "name": "to",
                            "description": "Start the video stream N ms into the specified timespan.  Allows playing of a smaller segment",
                            "required": false,
                            "type":"string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "Request succeeded"
                        },
                        {
                            "code": 301,
                            "message": "Asset has been moved to a different archiver"
                        },
                        {
                            "code": 400,
                            "message": "Unexpected or non-identifiable arguments are supplied"
                        },
                        {
                            "code": 401,
                            "message": "Unauthorized due to invalid session cookie"
                        },
                        {
                            "code": 403,
                            "message": "Forbidden due to the user missing the necessary privileges"
                        },
                        {
                            "code": 404,
                            "message": "Video was not found"
                        }
                    ]
                }
            ]
        },
        {
            "path": "/asset/list/image?t={start_timestamp};e={end_timestamp};a={asset_class};c={device_id};count={count};q={quality}",
            "operations": [
                {
                    "method": "GET",
                    "summary": "GET Image List",
                    "notes": "Get image list",
                    "nickname": "getListImage",
                    "parameters": [
                        {
                            "name": "device_id",
                            "description": "Device ID",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        },
                        {
                            "name": "start_timestamp",
                            "description": "Start Timestamp in EEN format: YYYYMMDDHHMMSS.NNN",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        },
                        {
                            "name": "end_timestamp",
                            "description": "End Timestamp in EEN format: YYYYMMDDHHMMSS.NNN",
                            "required": false,
                            "type": "string",
                            "paramType": "path"
                        },
                        {
                            "name": "asset_class",
                            "description": "Asset class",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "enum":[
                                "all",
                                "pre",
                                "thumb"
                            ]
                        },
                        {
                            "name":"count",
                            "description":"Used instead or with an e argument. If used with an e argument, the count is a limit on the number of entries to return, starting at the starting timestamp.  If used without the e argument, returns N entries.  Support negative value, which returns N entries before <t>, sorted in reverse order - example -5 return 5 events previous to the specified time.",
                            "required":false,
                            "type":"integer",
                            "format":"int64",
                            "paramType":"path"
                        },
                        {
                            "name": "quality",
                            "description": "Indicates requested resolution if multiple are available",
                            "required": false,
                            "type": "string",
                            "paramType": "path",
                            "enum":[
                                "high",
                                "med",
                                "low"
                            ]
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "Request succeeded"
                        },
                        {
                            "code": 301,
                            "message": "Asset has been moved to a different archiver"
                        },
                        {
                            "code": 400,
                            "message": "Unexpected or non-identifiable arguments are supplied"
                        },
                        {
                            "code": 401,
                            "message": "Unauthorized due to invalid session cookie"
                        },
                        {
                            "code": 403,
                            "message": "Forbidden due to the user missing the necessary privileges"
                        }
                    ]
                }
            ]
        },
        {
            "path": "/asset/list/video?t={start_timestamp};e={end_timestamp};c={device_id};o={options}",
            "operations": [
                {
                    "method": "GET",
                    "summary": "GET Video List",
                    "notes": "Get video list",
                    "nickname": "getListVideo",
                    "parameters": [
                        {
                            "name": "device_id",
                            "description": "Device ID",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        },
                        {
                            "name": "start_timestamp",
                            "description": "Start Timestamp in EEN format: YYYYMMDDHHMMSS.NNN",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        },
                        {
                            "name": "end_timestamp",
                            "description": "End Timestamp in EEN format: YYYYMMDDHHMMSS.NNN",
                            "required": false,
                            "type": "string",
                            "paramType": "path"
                        },
                        {
                            "name": "options",
                            "description": "Additional modifier options. 'coalesce' = coalesces spans together.",
                            "required": false,
                            "type":"string",
                            "paramType": "path",
                            "enum":[
                                "coalesce"
                            ]
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "Request succeeded"
                        },
                        {
                            "code": 301,
                            "message": "Asset has been moved to a different archiver"
                        },
                        {
                            "code": 400,
                            "message": "Unexpected or non-identifiable arguments are supplied"
                        },
                        {
                            "code": 401,
                            "message": "Unauthorized due to invalid session cookie"
                        },
                        {
                            "code": 403,
                            "message": "Forbidden due to the user missing the necessary privileges"
                        }
                    ]
                }
            ]
        }
    ],
    "models":{}
}